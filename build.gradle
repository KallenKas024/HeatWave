plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.3-SNAPSHOT" apply false
}

architectury {
    minecraft = rootProject.minecraft_version
}

subprojects {
    apply plugin: "dev.architectury.loom"

    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.officialMojangMappings()
        implementation("org.joml:joml:$jomlVersion")
        implementation 'org.apache.commons:commons-math3:3.6.1'
        implementation ("org.valkyrienskies:valkyrienskies-120-forge:2.1.3-beta.1+a52f38bd68") { transitive = false }
        implementation("org.valkyrienskies.core:api:$vs_core_version")
        implementation("org.valkyrienskies.core:api-game:$vs_core_version")
        implementation("org.valkyrienskies.core:util:$vs_core_version")
        implementation("org.valkyrienskies.core:impl:$vs_core_version")
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.archives_base_name
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {
        // Add repositories to retrieve artifacts from in here.
        // You should only use this when depending on other mods because
        // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
        // See https://docs.gradle.org/current/userguide/declaring_repositories.html
        // for more information about repositories.
        mavenLocal()
        mavenCentral()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        maven {
            url="https://cursemaven.com"
        }
        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
        }
        maven {
            name = "Valkyrien Skies Internal"
            url = 'https://maven.valkyrienskies.org'
        }
        maven {
            url "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release.set(17)
    }

    java {
        withSourcesJar()
    }
}
